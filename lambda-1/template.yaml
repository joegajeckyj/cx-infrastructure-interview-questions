AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: ECS Infrastructure Interview - Joe Gajeckyj

Parameters:
  pLogLevel:
    Description: Enter the log level for the lambda function.
    Type: String
    Default: DEBUG
    AllowedValues:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL
  pFunctionName:
    Description: Enter the name of the lambda function.
    Type: String
    Default: Test-Lambda

Resources:
  rLambdaFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: lambda-function-role
      Path: /
      Policies:
        - PolicyName: allow-logging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

  rLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: 
      AutoPublishAlias: live
      Handler: lambda.handler
      Runtime: python3.8
      Environment:
        Variables:
          LOG_LEVEL: !Ref pLogLevel
      CodeUri: ./src
      Role: !GetAtt rLambdaFunctionRole.Arn
      DeploymentPreference:
        Type: Linear10PercentEvery2Minutes
        Hooks:
          PreTraffic: !RefrPpreTrafficHook
        Alarms:
        - !Ref rLambdaFunctionAliasErrorAlarm
        - !Ref rLambdaFunctionVersionErrorAlarm

  rLambdaFunctionAliasErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub '${rLambdaFunction}:live'
        - Name: FunctionName
          Value: !Ref rLambdaFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 1200
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching

  rLambdaFunctionVersionErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub '${rLambdaFunction}:live'
        - Name: FunctionName
          Value: !Ref rLambdaFunction
        - Name: ExecutedVersion
          Value: !GetAtt rLambdaFunction.Version.Version
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 1200
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching

  rPreTrafficHook:
    Type: AWS::Serverless::Function
    Properties:
      Handler: preTrafficHook.handler
      Policies:
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "lambda:InvokeFunction"
            Resource: !Ref rLambdaFunction.Version
      Runtime: nodejs12.x
      CodeUri: ./tests
      FunctionName: 'CodeDeployHook_rPreTrafficHook'
      DeploymentPreference:
        Enabled: false
      Timeout: 5
      Environment:
        Variables:
          NewVersion: !Ref rLambdaFunction.Version
Outputs:
  oLambdaFunctionName:
    Description: Name of the Lambda Function
    Value: !Ref rLambdaFunction
  oLambdaFunctionName:
    Description: Version Lambda Function
    Value: !Ref rLambdaFunction.Version

